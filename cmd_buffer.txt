0 ClearRenderTarget

    // glClearBufferfv(GL_COLOR, buffer, &clear_color)

    glPushAttrib(GL_COLOR_BUFFER_BIT)
    glDrawBuffer((buffer > 0) ? (GL_COLOR_ATTACHMENT0 + i) : (GL_BACK));
    glClearColor(clear_color[0], clear_color[1], clear_color[2], clear_color[3])
    glClear(GL_COLOR_BUFFER_BIT)
    glPopAttrib(GL_COLOR_BUFFER_BIT);

1 ClearDepthStencil

    // if( clear_flags & DEPTH   ) glClearBufferfv(GL_DEPTH, 0, &clear_depth);
    // if( clear_flags & STENCIL ) glClearBufferuiv(GL_STENCIL, 0, &clear_stencil);

    if( clear_flags & DEPTH   ) glClearDepth(clear_depth);
    if( clear_flags & STENCIL ) glClearStencil(clear_stencil);
    glClear(clear_flags);

2 SetInputLayout
    
    // glBindVertexArray(input_layout.api_handle)

    prev_attribs = enabled_attribs

    foreach( attrib in input_layout.attribs ) {
        enabled_attribs.add(attrib)
        prev_attribs.remove(attrib)
    }

    foreach( attrib in prev_attribs ) {
        glDisableVertexAttrib(attrib)
    }

3 SetPrimitiveTopology

    current_prim_topology = primitive_topology

4 SetIndexBuffer

    current_index_offset = offset
    current_index_format = format
    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, buffer.api_handle)

5 SetVertexBuffers

    for( i = 0; i < num_buffers; ++i ) {
        const slot = start_slot + i;

        glBindBuffer(GL_ARRAY_BUFFER, buffers[i].api_handle)
        glVertexAttribPointer(...)
        glVertexAttribDivisor(...)
    }

6  SetVertexShader
7  SetPixelShader
8  Reserved - Geometry Shader
9  Reserved - Domain Shader
10 Reserved - Hull Shader
11 Reserved - Compute Shader
    
    cgGLBindProgram(...)

12 VSSetConstantBuffers
13 PSSetConstantBuffers
14 Reserved - Geometry Shader
15 Reserved - Domain Shader
16 Reserved - Hull Shader
17 Reserved - Compute Shader

    cgGetNamedProgramUniformBuffer
        uniform cbuffer[0 .. n] {
            ...
        } internal_name;

    cgSetUniformBufferParameter

18 Draw

    glDrawArrays(current_prim_topology, start_vertex, num_vertices)

19 DrawIndexed

    glDrawElements(current_prim_topology, num_indices, current_index_format, (void*)current_index_offset)

20 DrawInstanced

    glDrawArraysInstanced(current_prim_topology, start_vertex, num_vertices, num_instances)

21 DrawIndexedInstanced

    // glDrawElementsInstancedBaseVertex(...)
    glDrawElementsInstanced(current_prim_topology, num_indices, current_index_format, (void*)current_index_offset, num_instances)

21 SetTexture

    glActiveTexture(GL_TEXTURE0 + n)
    glBindTexture(type, id)

22 SetRenderTarget
    
    glBindFramebuffer(GL_FRAMEBUFFER, id)
    glDrawBuffers(n, [GL_COLOR_ATTACHMENT0 ... GL_COLOR_ATTACHMENT0 + n])

23 SetRasterizerState

    glPolygonMode(...)
    glFrontFace(...)
    glCullFace(...)
    glEnable(...) / glDisable(...)

24 SetDepthStencilState

    glDepthFunc(...)
    glDepthMask(...)
    glStencilFuncSeparate(...)
    glStencilMaskSeparate(...)
    glStencilOpSeparate(...)
    glEnable(...) / glDisable(...)

25 SetBlendState

    glBlendColor(...)
    glBlendEquationSeparate(...)
    glBlendFunctionSeparate(...)

26 SetScissorRect

    glScissor(...)

27 SetViewport

    glViewport(...)